## Hashing

Hashing passwords essentially means that we're converting the user's password into another
string, which is one-way, and practically impossible to reverse.
To include additional security, it will then salt that string with random data, making
it even tougher to crack.


The username matches that of what I signed-up with, but if you notice, the password is a
rather long bunch of random data.
Since we used the standard password hashing from Werkzeug, it's applied a normal SHA256
method, which is just one way to salt a hashed password.


^ start $ end of string


cp templates/register.html templates/login.html -- to copy content to a new file


If you have something on your form like a multi-select dropdown list, that can be an
array of items, then you would use: 'request.form.getlist()' instead.
This would be helpful if you're grabbing multiple elements with the same name="" attribute,
such as various ingredients from a recipe for example.

Using admin for access to manage categories:
Otherwise, if a user is not currently in session, then they can only log-in or register.
If you plan on using a similar approach to restrict certain pages to an Admin, a better
approach would actually be to include an additional key-value pair.
Similar to our toggle switch for being urgent, you could include one for 'is_admin' or 'is_superuser'.
That way, you could eventually have more than one Admin or SuperUser, not relying purely
on the username itself.